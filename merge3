USE DATABASE MERGE4;

-- Count unique UNITIDs in all data tables
SELECT 'effy2022_dist_df' AS table_name, COUNT(DISTINCT UNITID) AS unique_unitid_count
FROM effy2022_dist_df;

SELECT 'hd2022_df' AS table_name, COUNT(DISTINCT UNITID) AS unique_unitid_count
FROM hd2022_df;

SELECT 'c2022_b_df' AS table_name, COUNT(DISTINCT UNITID) AS unique_unitid_count
FROM c2022_b_df;

SELECT 's2022_is_df' AS table_name, COUNT(DISTINCT UNITID) AS unique_unitid_count
FROM s2022_is_df;

-- Step 1: Remove duplicates from each table
CREATE OR REPLACE TABLE effy2022_dist_df_clean AS
WITH ranked_effy2022_dist AS (
    SELECT *,
           ROW_NUMBER() OVER (PARTITION BY UNITID ORDER BY UNITID) AS rn
    FROM effy2022_dist_df
)
SELECT *
FROM ranked_effy2022_dist
WHERE rn = 1;


CREATE OR REPLACE TABLE hd2022_df_clean AS
WITH ranked_hd2022 AS (
    SELECT *,
           ROW_NUMBER() OVER (PARTITION BY UNITID ORDER BY UNITID) AS rn
    FROM hd2022_df
)
SELECT *
FROM ranked_hd2022
WHERE rn = 1;

CREATE OR REPLACE TABLE c2022_b_df_clean AS
WITH ranked_c2022_b AS (
    SELECT *,
           ROW_NUMBER() OVER (PARTITION BY UNITID ORDER BY UNITID) AS rn
    FROM c2022_b_df
)
SELECT *
FROM ranked_c2022_b
WHERE rn = 1;

CREATE OR REPLACE TABLE s2022_is_df_clean AS
WITH ranked_s2022_is_df AS (
    SELECT *,
           ROW_NUMBER() OVER (PARTITION BY UNITID ORDER BY UNITID) AS rn
    FROM s2022_is_df
)
SELECT *
FROM ranked_s2022_is_df
WHERE rn = 1;

-- Step 2: Merge the data
WITH merged_data AS (
    SELECT 
        hd2022_df_clean.UNITID AS hd_unitid,  -- Starting table since it has the most unitids
        hd2022_df_clean.*,  
        c2022_b_df_clean.*,
        effy2022_dist_df_clean.*,            
        s2022_is_df_clean.*,                 
    FROM 
        hd2022_df_clean
    LEFT JOIN c2022_b_df_clean ON hd2022_df_clean.UNITID = c2022_b_df_clean.UNITID
    LEFT JOIN effy2022_dist_df_clean ON hd2022_df_clean.UNITID = effy2022_dist_df_clean.UNITID
    LEFT JOIN s2022_is_df_clean ON hd2022_df_clean.UNITID = s2022_is_df_clean.UNITID
)

-- Step 3: Sample 5000 unique UNITID rows
SELECT *
FROM (
    SELECT *,
           ROW_NUMBER() OVER (ORDER BY RANDOM()) AS sampled_rn
    FROM merged_data
) AS sampled
WHERE sampled_rn <= 5000;
